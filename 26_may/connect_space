def connect_presentation_space(window_title: str):
    global _connected_window, _window_title, _terminal_canvas, _char_w, _char_h
    _window_title = window_title
    app = Application(backend="uia").connect(title=window_title)
    dlg = app.window(title=window_title)
    dlg.set_focus()
    time.sleep(0.5)

    try:
        # Find the terminal pane using class_name="Pane" and name="256"
        term_pane = dlg.child_window(title="256", control_type="Pane")
        rect = term_pane.element_info.bounding_rectangle
        _terminal_canvas = term_pane
        _char_w = (rect.right - rect.left) / 80
        _char_h = (rect.bottom - rect.top) / 24
        print(f"[Canvas] Terminal Bounds: {rect}, Char Size: {_char_w:.2f} x {_char_h:.2f}")
    except Exception as e:
        print("[WARNING] Terminal canvas detection failed:", e)
        _terminal_canvas = None

    _connected_window = dlg
    return True
